f = read.csv(file = "lineitem.tbl",sep=c("|","\n"),header=F)
f = read.csv(file = "region.tbl",sep=c("|","\n"),header=F)
head(f)
f = read.csv(file = "region.tbl",sep=c("|"," "),header=F)
head(f)
f = read.csv(file = "region.tbl",sep=c("|\n"),header=F)
f = read.csv(file = "region.tbl",sep="|\n",header=F)
f = read.csv(file = "region.tbl",sep="|")
head(f)
f = read.csv(file = "region.tbl",sep=c("|"," ","\n") )
f = read.csv(file = "region.tbl",sep=c("|"," ","\n"),header = F )
f = read.csv(file = "region.tbl",sep=("|","\n")  )
f = read.csv(file = "region.tbl",sep=("|"), blank.lines.skip=T )
f = read.csv(file = "region.tbl",sep=("|"), strip.white=T )
f = read.csv(file = "region.tbl",sep=("|"), skipNul=T )
head(f)
f = read.csv(file = "region.tbl",sep=("|"), allowEscapes = T )
f = read.csv(file = "lineitem.tbl",sep="|",header=F)
head(f[;1:ncol(f)  ])
head() f[ncol(F)]
head(f[ncol(f)])
f[ncol(f)] = NULL
dbWriteTable(conn,  "lineitem",f,append=TRUE)
f=NULL
gc()
save.image("~/vvv.RData")
f = read.csv(file = "lineitem.tbl", header = F )
f = NULL
gc()
setwd("~/Schreibtisch/exp_res/plots/exp1/database fits")
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
inno_csv$V2[1]
inno_csv$V2[2]
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$v2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$v3)
data <- data.frame(configurations, latency, throughput)
p <- plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
length(configurations)
length(latency)
length(throughput)
latency
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
p <- plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 500, height = 500, margin = m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 500, height = 500,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 500, height = 200,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 500, height = 400,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 500, height = 300,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 800, height = 300,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 300,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb buffer pool=15%", "innodb buffer pool=30%", "innodb buffer pool=45%","innodb buffer pool=60%","buffer pool=75%","buffer pool=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 400,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 400,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 300,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("size=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 300,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 50,
b = 100,
t = 100,
pad = 4
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 300,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 50,
b = 100,
t = 100,
pad = 4
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 400,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 50,
b = 100,
t = 100,
pad = 3
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 400,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 50,
b = 90,
t = 100,
pad = 3
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 400,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 50,
b = 20,
t = 100,
pad = 3
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 400,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 50,
b = 300,
t = 100,
pad = 3
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 400,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 50,
b = 100,
t = 100,
pad = 3
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 400,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 50,
b = 100,
t = 100,
pad = 3
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 450,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 50,
b = 100,
t = 0,
pad = 3
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 450,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 50,
b = 100,
t = 0,
pad = 3
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 350,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 50,
b = 100,
t = 0,
pad = 1
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 350,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 100,
b = 100,
t = 0,
pad = 1
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 350,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 100,
b = 100,
t = 0,
pad = 1
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 600, height = 350,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 100,
b = 100,
t = 0,
pad = 1
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 700, height = 350,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 100,
b = 100,
t = 0,
pad = 1
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as Query per hour') %>%
layout(autosize = F, width = 750, height = 350,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 100,
b = 100,
t = 0,
pad = 1
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as QPH') %>%
layout(autosize = F, width = 750, height = 350,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb=15%", "innodb=30%", "innodb=45%","innodb=60%","innodb=75%","innodb=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 200,
b = 100,
t = 0,
pad = 1
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as QPH') %>%
layout(autosize = F, width = 750, height = 350,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("innodb bfr=15%", "innodb bfr=30%", "innodb bfr=45%","innodb bfr=60%","innodb bfr=75%","innodb bfr=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 200,
b = 100,
t = 0,
pad = 1
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as QPH') %>%
layout(autosize = F, width = 750, height = 350,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
library(plotly)
memory_csv=read.csv(file = "mem.csv", header =  F);
inno_csv=read.csv(file = "inno.csv", header =  F);
configurations <- c("bfr=15%", "bfr=30%", "bfr=45%","bfr=60%","bfr=75%","bfr=90%","memory")
latency <- c(inno_csv$V2[1],inno_csv$V2[2],inno_csv$V2[3],inno_csv$V2[4],inno_csv$V2[5],inno_csv$V2[6],memory_csv$V2)
throughput <- c(inno_csv$V3[1],inno_csv$V3[2],inno_csv$V3[3],inno_csv$V3[4],inno_csv$V3[5],inno_csv$V3[6],memory_csv$V3)
data <- data.frame(configurations, latency, throughput);
m <- list(
l = 50,
r = 200,
b = 100,
t = 0,
pad = 1
)
plot_ly(data, x = ~configurations, y = ~latency, type = 'bar', name = 'Latency in seconds') %>%
add_trace(y = ~throughput, name = 'throughput as QPH') %>%
layout(autosize = F, width = 750, height = 350,margin=m,yaxis = list(title = 'Count'), barmode = 'group')
